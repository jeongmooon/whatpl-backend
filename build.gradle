buildscript {
    ext {
        restdocsApiSpecVersion = '0.18.4'
    }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.8'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}" // openAPI 플러그인
		// 4. swaggerUI 플러그인 추가
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.whatpl'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.apache.commons:commons-lang3:3.14.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// JWT 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// P6Spy 추가
	implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0"
	
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // restdocs mockmvc
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:'+restdocsApiSpecVersion // restdocs
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2")

}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 10. openapi3가 먼저 실행 - doFrist를 통한 Header 설정 (글에서 자세하게 설명)
tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'
    delete file('src/main/resources/static/docs/')
    copy {
    	from "build/resources/mains/static/docs"
    	into "src/main/resources/static/docs"
    }
}

// 11. 생성된 openapi3 스펙을 기반으로 SwaggerUISample 생성 및 static/docs 패키지에 복사
bootJar {
    dependsOn(':openapi3')
}

// openAPI 문서 형식
openapi3 {
	servers = [
			{ url = 'http://localhost:8080' },
			{ url = 'http://whaple.com' }
	]
	title = 'Whatpl Service API'
	description = 'Whatpl Service API description'
	version = '1.0.0'
	format = 'json'
	outputDirectory = "build/resources/main/static/docs"
    outputFileNamePrefix = "swagger"
}